{"version":3,"sources":["components/VerifySys/verify.jsx","components/VerifySys/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["provider","web3","HttpProvider","seaport","OpenSeaPort","networkName","Network","Main","MyVerify","useEffect","window","ethereum","request","method","then","newAccounts","setUser","id","prop","erc","useState","user","contract","setContract","values","setValues","open","setOpen","ownership","setOwnerShip","fetching","setFetching","fetchData","a","getAssetBalance","accountAddress","asset","tokenAddress","tokenId","schemaName","balance","console","log","toString","Box","sx","display","flexWrap","FormControl","fullWidth","m","width","variant","InputLabel","htmlFor","Input","value","onChange","event","target","startAdornment","InputAdornment","position","handleChange_Contract","handleChange","Button","onClick","setTimeout","Collapse","in","Alert","severity","action","IconButton","color","size","fontSize","mb","darkMode","autoPlay","icon","Verify","props","Copyright","Typography","align","Link","href","Date","getFullYear","theme","createTheme","palette","type","primary","main","secondary","App","ThemeProvider","CssBaseline","AppBar","Toolbar","mr","noWrap","bgcolor","p","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.617d85f4.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Input from '@mui/material/Input';\r\nimport Button from '@mui/material/Button';\r\nimport { useEffect, useState } from \"react\";\r\nimport Alert from '@mui/material/Alert';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Collapse from '@mui/material/Collapse';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport * as web3 from 'web3'\r\nimport { OpenSeaPort, Network } from 'opensea-js'\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport { NFTE } from '@nfte/react';\r\n\r\nconst provider = new web3.providers.HttpProvider('https://mainnet.infura.io')\r\n\r\nconst seaport = new OpenSeaPort(provider, {\r\n    networkName: Network.Main\r\n})\r\n\r\nexport function MyVerify () {\r\n    // Login System\r\n    useEffect(() => {\r\n        window.ethereum\r\n            .request({ method: 'eth_requestAccounts' })\r\n            .then((newAccounts) => setUser({id: newAccounts[0]}));\r\n    }, []);\r\n\r\n    // Verify Constant\r\n    const erc = 'ERC721';\r\n    const [user, setUser] = useState({\r\n        id: \"\"\r\n    });\r\n    const [contract, setContract] = useState({\r\n        id: \"\"\r\n    });\r\n    const [values, setValues] = useState({\r\n        id: \"\"\r\n    });\r\n    const [open, setOpen] = useState(false);\r\n    const [ownership, setOwnerShip] = useState(false)\r\n    const [fetching, setFetching] = useState(false);\r\n\r\n\r\n    const handleChange = (prop) => (event) => {\r\n        setValues({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const handleChange_Contract = (prop) => (event) => {\r\n        setContract({ ...values, [prop]: event.target.value });\r\n    };\r\n    const handleChange_User = (prop) => (event) => {\r\n        setUser({ ...values, [prop]: event.target.value });\r\n    };\r\n\r\n    const fetchData = async () => {\r\n        // 使用 await 等待 API 取得回應後才繼續\r\n        const balance = await seaport.getAssetBalance({\r\n            accountAddress: user.id,\r\n            asset: {\r\n                tokenAddress: contract.id,\r\n                tokenId: values.id,\r\n                schemaName: erc\r\n            },\r\n        })\r\n        console.log(balance.toString());\r\n        (balance.toString() === \"1\" ? setOwnerShip(true) : setOwnerShip(false));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                <FormControl fullWidth sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-id\">User Address</InputLabel>\r\n                    <Input\r\n                        id=\"standard-adornment-id\"\r\n                        value={user.id}\r\n                        onChange={handleChange_User('id')}\r\n                        startAdornment={<InputAdornment position=\"start\"> - </InputAdornment>}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-id\">Contract(NFT) Address</InputLabel>\r\n                    <Input\r\n                        id=\"standard-adornment-id\"\r\n                        value={contract.id}\r\n                        onChange={handleChange_Contract('id')}\r\n                        startAdornment={<InputAdornment position=\"start\"> - </InputAdornment>}\r\n                    />\r\n                </FormControl>\r\n                <FormControl fullWidth sx={{ m: 1, width: '25ch' }} variant=\"standard\">\r\n                    <InputLabel htmlFor=\"standard-adornment-id\">TokenID</InputLabel>\r\n                    <Input\r\n                        id=\"standard-adornment-id\"\r\n                        value={values.id}\r\n                        onChange={handleChange('id')}\r\n                        startAdornment={<InputAdornment position=\"start\"> - </InputAdornment>}\r\n                    />\r\n                </FormControl>\r\n                <Button sx={{ m: 2, width: '26.5ch' }}\r\n                    onClick={() => {\r\n                        setFetching(true);\r\n                        setTimeout(() => {\r\n                            setFetching(false);\r\n                        }, 5000);\r\n                        console.log(\"Verifying: \",erc, contract, user, values.id);\r\n                        fetchData();\r\n                        setOpen(true)\r\n                    }}\r\n                    variant=\"contained\">Verify</Button>\r\n                <Box sx={{ width: '100%' }}>\r\n                    <Collapse in={open && ownership && !fetching}>\r\n                        <Alert\r\n                            severity=\"success\"\r\n                            action={\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    size=\"small\"\r\n                                    onClick={() => {\r\n                                        setOpen(false);\r\n                                    }}\r\n                                >\r\n                                    <CloseIcon fontSize=\"inherit\" />\r\n                                </IconButton>\r\n                            }\r\n                            sx={{ mb: 2 }}\r\n                        >\r\n                            Verify Successfully!\r\n                        </Alert>\r\n                        <NFTE\r\n                            contract={contract.id}\r\n                            tokenId={values.id}\r\n                            darkMode={false}\r\n                            autoPlay={true} />\r\n                    </Collapse>\r\n                    <Collapse in={open && fetching}>\r\n                        <Alert\r\n                            severity=\"info\"\r\n                            sx={{ mb: 2 }}\r\n                            icon={<AccessTimeIcon fontSize=\"inherit\" />}\r\n                        >\r\n                            Now Verifying...\r\n                        </Alert>\r\n                    </Collapse>\r\n                    <Collapse in={open && !ownership && !fetching}>\r\n                        <Alert\r\n                            severity=\"error\"\r\n                            action={\r\n                                <IconButton\r\n                                    aria-label=\"close\"\r\n                                    color=\"inherit\"\r\n                                    size=\"small\"\r\n                                    onClick={() => {\r\n                                        setOpen(false);\r\n                                    }}\r\n                                >\r\n                                    <CloseIcon fontSize=\"inherit\" />\r\n                                </IconButton>\r\n                            }\r\n                            sx={{ mb: 2 }}\r\n                        >\r\n                            Verify Failed!\r\n                        </Alert>\r\n                    </Collapse>\r\n                </Box>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { MyVerify } from \"./verify\";\r\n\r\nexport function Verify(props) {\r\n    return (\r\n        <MyVerify />\r\n    );\r\n}","import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport ViewInArTwoToneIcon from '@mui/icons-material/ViewInArTwoTone';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport HomeIcon from '@mui/icons-material/Home';\nimport IconButton from '@mui/material/IconButton';\nimport Link from '@mui/material/Link';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport { Verify } from \"./components/VerifySys\";\n\nfunction Copyright() {\n\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://www.linkedin.com/in/mollyjn/\">\n        swfLAB - KilliMilli\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst theme = createTheme({\n  palette: {\n    type: 'light',\n    primary: {\n      main: '#3f51b5',\n    },\n    secondary: {\n      main: '#f50057',\n    },\n  },\n});\n\nexport default function App() {\n\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar>\n          <IconButton sx={{ mr: 2 }} href=\"/\" aria-label=\"home\">\n            <HomeIcon />\n          </IconButton>\n          <ViewInArTwoToneIcon sx={{ mr: 2 }} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            NFT Verify System\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Verify />\n\n      {/* Footer */}\n      <Box sx={{ bgcolor: 'background.paper', p: 6 }} component=\"footer\">\n        <Typography\n          variant=\"subtitle1\"\n          align=\"center\"\n          color=\"text.secondary\"\n          component=\"p\"\n        >\n          Powered by Opensea-js!\n        </Typography>\n        <Copyright />\n      </Box>\n      {/* End footer */}\n    </ThemeProvider>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}